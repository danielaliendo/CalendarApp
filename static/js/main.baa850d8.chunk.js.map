{"version":3,"sources":["components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","types/types.js","actions/ui.js","actions/events.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","components/auth/RegisterScreen.js","router/AppRouter.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["LoginScreen","className","type","placeholder","value","to","Navbar","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","title","user","name","types","uiOpenModal","eventClearActiveEvent","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","moment","minutes","seconds","add","nowPlus1","clone","initEvent","notes","start","toDate","end","CalendarModal","modalOpen","useSelector","state","ui","activeEvent","calendar","dispatch","useDispatch","useState","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","handleInputChange","target","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","onSubmit","e","preventDefault","momentStart","momentEnd","isSameOrAfter","Swal","fire","trim","length","payload","eventAddNew","id","Date","getTime","_id","onChange","minDate","autoComplete","rows","AddNewFab","onClick","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","localStorage","getItem","lastView","setLastView","events","startAccessor","endAccessor","eventPropGetter","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","setItem","onSelectSlot","selectable","view","components","RegisterScreen","AppRouter","exact","path","inicialState","bgcolor","rootReducer","combineReducers","action","map","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.baa850d8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './login.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const LoginScreen = () => {\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"col-md-6 login-form-1\">\r\n                <h3>Ingreso</h3>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Correo\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"ContraseÃ±a\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"submit\"\r\n                            className=\"btnSubmit\"\r\n                            value=\"Login\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n                <Link to=\"/register\">Crear una cuenta</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                Usuario\r\n            </span>\r\n            <button className=\"btn btn-outline-danger\">\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el dÃ­a',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'DÃ­a',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver mÃ¡s (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong> <br />\r\n            <span>- {user.name}</span>\r\n        </div >\r\n    )\r\n}\r\n","export const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set active',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted'\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})","import { types } from \"../types/types\";\r\n\r\n\r\nexport const eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent  \r\n})\r\n\r\nexport const eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\nexport const eventDeleted = () => ({\r\n    type: types.eventDeleted  \r\n})\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventAddNew, eventClearActiveEvent, eventUpdated } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root')\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours')\r\nconst nowPlus1 = now.clone().add(1,'hours')\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate(),\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector(state => state.ui)\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n    const dispatch = useDispatch()\r\n    \r\n    const [dateStart, setDateStart] = useState(now.toDate())\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate())\r\n    const [titleValid, setTitleValid] = useState(true)\r\n\r\n    const [formValues, setFormValues] = useState( initEvent )\r\n\r\n    useEffect(() => {\r\n\r\n        if ( activeEvent ) {\r\n            setFormValues(activeEvent)\r\n        } else {\r\n            setFormValues( initEvent )\r\n        }\r\n\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal())\r\n        setFormValues( initEvent )\r\n        dispatch(eventClearActiveEvent())\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart( e )\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd( e )\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error')\r\n        }\r\n\r\n        if ( title.trim().length <= 0) {\r\n            return setTitleValid( false )\r\n        }\r\n\r\n        //TODO: realizar grabacion\r\n        // console.log(formValues)\r\n        if ( activeEvent ) {\r\n            dispatch(eventUpdated( formValues ))\r\n        } else {            \r\n            dispatch(eventAddNew({\r\n                ...formValues,\r\n                id: new Date().getTime(),\r\n                user: {\r\n                    _id: '1234',\r\n                    name: 'Yo'\r\n                }\r\n            }));\r\n        }\r\n        \r\n        setTitleValid(true)\r\n        closeModal()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={ modalOpen }\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1>{ (activeEvent) ? 'Editar evento' : 'Nuevo evento' }</h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmit }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        value={ dateEnd }\r\n                        minDate={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={` form-control ${ !titleValid && 'is-invalid' }`}\r\n                        placeholder=\"TÃ­tulo del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripciÃ³n corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">InformaciÃ³n adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClickNew = () => {\r\n        dispatch(uiOpenModal())\r\n    }\r\n    \r\n    return (\r\n        <button\r\n            onClick={ handleClickNew }\r\n            className=\"btn btn-primary fab\"\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventDeleted } from '../../actions/events'\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventDeleted())\r\n    }\r\n\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventSetActive, eventClearActiveEvent } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\n// const events = [{\r\n//     title: 'CumpleaÃ±os del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: \"Comprar el pastel\",\r\n//     user: {\r\n//         _id: 123,\r\n//         name: 'Fernando'\r\n//     }\r\n// }]\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // Read store events\r\n    const { events, activeEvent } = useSelector(state => state.calendar)\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal())\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e))\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e)\r\n        localStorage.setItem('lastView', e)\r\n    }\r\n\r\n    const eventStyleGetter = () => {\r\n\r\n        const style = {\r\n            backgroundColor: '#367cf7',\r\n            borderRadius: 0,\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch( eventClearActiveEvent() )\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n            <AddNewFab />\r\n            {activeEvent && <DeleteEventFab />}\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const RegisterScreen = () => {\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"col-md-6 login-form-2\">\r\n                <h3>Registro</h3>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Nombre\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Correo\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"ContraseÃ±a\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Repita la contraseÃ±a\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"submit\"\r\n                            className=\"btnSubmit\"\r\n                            value=\"Crear cuenta\" />\r\n                    </div>\r\n                </form>\r\n                <Link style={{color: 'white'}} to=\"/login\">Ya estoy registrado</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n    HashRouter,\r\n} from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n            <HashRouter>\r\n                <div>\r\n                    <Switch>\r\n                        <Route exact path=\"/login\">\r\n                            <LoginScreen />\r\n                        </Route>\r\n                        <Route exact path=\"/register\">\r\n                            <RegisterScreen />\r\n                        </Route>\r\n                        <Route exact path=\"/\">\r\n                            <CalendarScreen />\r\n                        </Route>\r\n\r\n                        <Redirect to=\"/\" />\r\n                    </Switch>\r\n                </div>\r\n            </HashRouter>\r\n    ) \r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst inicialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = ( state = inicialState , action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        \r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import moment from 'moment';\r\nimport { types } from '../types/types';\r\n\r\nconst inicialState = {\r\n    events: [{\r\n        id: new Date().getTime(),\r\n        title: 'Mi evento',\r\n        start: moment().toDate(),\r\n        end: moment().add(2, 'hours').toDate(),\r\n        bgcolor: '#fafafa',\r\n        notes: \"Notas sobre mi evento\",\r\n        user: {\r\n            _id: 123,\r\n            name: 'Daniela'\r\n        }\r\n    }],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = inicialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport { uiReducer } from \"./uiReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    // TODO: AuthReducer\r\n})","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n)","import React from 'react'\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n            <Provider store={ store }>\r\n                <AppRouter />\r\n            </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}